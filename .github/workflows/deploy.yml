# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno then run `deno lint` and `deno test`.
# For more information see: https://github.com/denoland/setup-deno

name: Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

env:
  DENO_DEPLOY_TOKEN: ${{ secrets.DENO_DEPLOY_TOKEN }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Setup Deno
        # uses: denoland/setup-deno@v1
        uses: denoland/setup-deno@61fe2df320078202e33d7d5ad347e7dcfa0e8f31  # v1.1.2
        with:
          deno-version: v1.x

      - name: Install deployctl
        run: deno install -Arf jsr:@deno/deployctl@1.12.0

      - name: Run build
        run: deno task build && deno task ok

      - name: Deploy (PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          deployctl deploy --project=${{ secrets.DEV_PROJECT_ID }} --env=PUBLIC_KEY=${{ secrets.DEV_PUBLIC_KEY }} --env=TOKEN=${{ secrets.DEV_TOKEN }} --env=MODERATOR_ROLE=${{ secrets.DEV_MODERATOR_ROLE }} --env=REPORT_CHANNEL=${{ secrets.DEV_REPORT_CHANNEL }} --env=REPORT_WEBHOOK_ID=${{ secrets.DEV_REPORT_WEBHOOK_ID }} --env=REPORT_WEBHOOK_TOKEN=${{ secrets.DEV_REPORT_WEBHOOK_TOKEN }}

      - name: Deploy (Push)
        if: ${{ github.event_name == 'push' }}
        run: |
          deployctl deploy --project=${{ secrets.PROD_PROJECT_ID }} --env=PUBLIC_KEY=${{ secrets.PROD_PUBLIC_KEY }} --env=TOKEN=${{ secrets.PROD_TOKEN }} --env=MODERATOR_ROLE=${{ secrets.PROD_MODERATOR_ROLE }} --env=REPORT_CHANNEL=${{ secrets.PROD_REPORT_CHANNEL }} --env=REPORT_WEBHOOK_ID=${{ secrets.PROD_REPORT_WEBHOOK_ID }} --env=REPORT_WEBHOOK_TOKEN=${{ secrets.PROD_REPORT_WEBHOOK_TOKEN }}
